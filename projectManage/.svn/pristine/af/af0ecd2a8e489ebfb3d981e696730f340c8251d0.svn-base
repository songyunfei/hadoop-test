
package com.linkGap.projectManage.controller;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.LockedAccountException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.linkGap.projectManage.anotation.OperationLogAnotation;
import com.linkGap.projectManage.model.ActiveUser;
import com.linkGap.projectManage.model.ReturnResultUtil;

/**
 * @author renhengli
 * @date 2018年1月10日
 * @version 1.0
 */
@Controller
public class HomeController {
	private Logger logger = Logger.getLogger(HomeController.class);

	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public String login() {
		return "login";
	}

	/**
	 * 
	 * @Title: login
	 * @Description: 登录
	 * @param request
	 * @param username
	 *            用户名
	 * @param password
	 *            密码
	 * @param uniqueDeviceIdentifier
	 *            登录设备唯一标识符
	 * @param model
	 * @return 参数 ReturnResultUtil 返回类型
	 */
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	@ResponseBody
	@OperationLogAnotation(moduleName = "用户登录", operation = "用户登录")
	public ReturnResultUtil login(HttpServletRequest request, String username, String password, String uniqueDeviceIdentifier) {
		if (StringUtils.isEmpty(username) || StringUtils.isEmpty(password)) {
			return new ReturnResultUtil("01", "用户名或密码不能为空！");
		}
		Subject subject = SecurityUtils.getSubject();
		UsernamePasswordToken token = new UsernamePasswordToken(username, password);
		try {
			subject.login(token);
			ActiveUser activeUser = (ActiveUser) SecurityUtils.getSubject().getPrincipal();
			// TODO 1 
			// 判断uniqueDeviceIdentifier是否和上一次登录设备唯一标识符相同，如果不相同，则推送消息到原来的设备，告知在别的终端登录，并自动清空之前设备的登录信息
			
			// TODO 2 登录成功后要记录登录日志
			return new ReturnResultUtil("00", "登录成功！", activeUser);
		} catch (LockedAccountException lae) {
			token.clear();
			return new ReturnResultUtil("01", "用户已经被锁定不能登录，请与管理员联系！");
		} catch (UnknownAccountException e){
			token.clear();
			return new ReturnResultUtil("01", "用户不存在！");
		} catch (AuthenticationException e) {
			token.clear();
			return new ReturnResultUtil("01", "用户或密码不正确！");
		} 
	}

}
