package com.linkGap.projectManage.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.linkGap.projectManage.dao.CustomerMapper;
import com.linkGap.projectManage.model.entity.Customer;
import com.linkGap.projectManage.model.entity.CustomerPic;
import com.linkGap.projectManage.model.view.CustomerView;
import com.linkGap.projectManage.service.CustomerService;
@Service
public class CustomerServiceImpl implements CustomerService {
	
	@Autowired
	private CustomerMapper customerMapper;
    
	public static ObjectMapper mapper=new ObjectMapper();
	
	/** 
	 * @author xujie
	 * @date: 2018年1月15日 下午3:48:37 
	 */
	@Override
	public String update(Integer customerId, String companyName, String mobile,String addressDetail,String picPist,Integer userId) throws Exception {
		Customer customer =new Customer();
		customer.setCustomerId(customerId);
		customer.setCompanyName(companyName);
		customer.setMobile(mobile);
		customer.setAddressDetail(addressDetail);
		customer.setUpdateTime(new Date());
		customer.setUpdateUserId(userId);
		List<CustomerPic> list = mapper.readValue(picPist, new TypeReference<List<CustomerPic>>() {});
		String imgUrls="";
		String oldImgUrls;
		for (CustomerPic customerPic : list) {
			imgUrls+=customerPic.getImgUrls()+",";
			if(customerPic.getImgUrls().indexOf(customerPic.getImgUrls())>-1){
				customerPic.setCustomerId(customerId);
			}
			customerPic.setCreateTime(new Date());
			customerPic.setCreateUserId(userId);
			customerPic.setStatus("1");
		}
		customer.setImageUrls(imgUrls.substring(0, imgUrls.length()-1));
		customerMapper.updateByPrimaryKey(customer);
		return "ok";
	}

	/** 
	 * @author xujie
	 * @date: 2018年1月15日 下午5:27:15 
	 */
	@Override
	public CustomerView queryCustomer(Integer userId) {
		return customerMapper.queryCustomerByUserId(userId);
	}

}
