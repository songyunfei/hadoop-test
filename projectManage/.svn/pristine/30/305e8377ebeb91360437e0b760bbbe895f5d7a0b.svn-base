package com.linkGap.projectManage.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.linkGap.projectManage.dao.ProjectStepLogsMapper;
import com.linkGap.projectManage.dao.ProjectStepLogsPicMapper;
import com.linkGap.projectManage.dao.ProjectStepMapper;
import com.linkGap.projectManage.model.ReturnResultUtil;
import com.linkGap.projectManage.model.entity.ProjectStep;
import com.linkGap.projectManage.model.entity.ProjectStepLogs;
import com.linkGap.projectManage.model.view.ProjectStepLogView;
import com.linkGap.projectManage.model.view.ProjectStepLogsPicView;
import com.linkGap.projectManage.model.view.ProjectStepView;
import com.linkGap.projectManage.service.ProjectStepService;

@Service
public class ProjectStepServiceImpl implements ProjectStepService {
	
	@Autowired
	private ProjectStepMapper projectStepMapper;
	
	@Autowired
	private ProjectStepLogsMapper projectStepLogsMapper;
	
	@Autowired
	private ProjectStepLogsPicMapper projectStepLogsPicMapper;

	@Override
	public ReturnResultUtil getProjectStepByProjectInfoId(Integer id) {
		List<ProjectStepView> stepList= projectStepMapper.getProjectStepByProjectInfoId(id);
		return new ReturnResultUtil(stepList);
	}

	@Override
	public ReturnResultUtil saveProjectSteps(List<ProjectStep> projectSteps, Integer projectInfoId) {
		for(ProjectStep projectStep:projectSteps){
			projectStep.setStatus("1");
			projectStep.setCreateTime(new Date());
		}
		projectStepMapper.deleteStepByProjectInfoId(projectInfoId);
		int i = projectStepMapper.insertBatch(projectSteps);
		if(i>0){
			return new ReturnResultUtil("00", "保存成功");
		}else{
			return new ReturnResultUtil("01", "保存失败");
		}
	}

	@Override
	public ReturnResultUtil getLogByStepId(Integer stepId) {
		List<ProjectStepLogView> projectStepLogs = projectStepLogsMapper.getLogByStepId(stepId);
		for(ProjectStepLogView projectStepLog:projectStepLogs){
			List<ProjectStepLogsPicView> projectStepLogsPics = projectStepLogsPicMapper.getPicByLog(projectStepLog.getProjectStepLogId());
			projectStepLog.setPicList(projectStepLogsPics);
		}
		return new ReturnResultUtil(projectStepLogs);
	}

	@Override
	public ReturnResultUtil opreateStep(ProjectStepLogs projectStepLogs) {
		projectStepLogsMapper.insert(projectStepLogs);
		projectStepLogsPicMapper.insertBatch(projectStepLogs.getProjectStepLogsPic());
		return null;
	}

}
